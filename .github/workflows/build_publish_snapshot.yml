name: Snapshot build and publish

on:
  push:
    branches-ignore:
      - 'master'
      - 'release-**'

jobs:
  build:

    runs-on: [self-hosted, Linux]

    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - id: codeartifact_login
        name: Login to CodeArtifact
        run: |
          CODEARTIFACT_TOKEN=$(/usr/local/bin/aws codeartifact get-authorization-token --duration-seconds 900 --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} --region ${{ secrets.AWS_REGION }} --output text --query authorizationToken)
          echo "::add-mask::$CODEARTIFACT_TOKEN"
          echo "CODEARTIFACT_TOKEN=$CODEARTIFACT_TOKEN" >> $GITHUB_ENV

      - name: setting nodejs
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: ${{ secrets.CODEARTIFACT_NPM_RELEASES_REPOSITORY_URL }}
          always-auth: true

      - name: install dependencies
        run: |
          yarn install
        env:
          NODE_AUTH_TOKEN: ${{ env.CODEARTIFACT_TOKEN }}

      - name: setting nodejs
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: ${{ secrets.CODEARTIFACT_NPM_SNAPSHOTS_REPOSITORY_URL }}
          always-auth: true

      - name: build publish and create NPM dist tag
        run: |
          npm --no-git-tag-version version $(npm run --silent get-version)-$GITHUB_SHA
          yarn publish --tag ${{ env.GITHUB_REF_SLUG }}
        env:
          NODE_AUTH_TOKEN: ${{ env.CODEARTIFACT_TOKEN }}

      - name: create local .npmrc
        shell: bash
        run: |
          printf "_auth=${{ secrets.JFA_AUTH_TOKEN }}\nalways-auth=true\nemail=buildteam@dolby.com\nregistry=${{ env.JFA_NPM_REGISTRY_URL }}" > $(pwd)/.npmrc
          npm publish --tag ${{ env.GITHUB_REF_SLUG }} --registry ${{ env.JFA_NPM_REGISTRY_URL }}
        env:
          JFA_NPM_REGISTRY_URL: ${{ secrets.JFA_NPM_SNAPSHOTS_REGISTRY_URL }}
  
      - name: Generate github app token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.VOXEET_IO_WEB_APP_ID }}
          private_key: ${{ secrets.VOXEET_IO_WEB_APP_PRIVATE_KEY }}
          repository: voxeet/voxeet-io-web

      - name: Send repository dispatch to voxeet-io-web
        uses: peter-evans/repository-dispatch@v1
        continue-on-error: true
        with:
          token: ${{ steps.generate_token.outputs.token }}
          event-type: uxkit-${{ env.GITHUB_REF_SLUG }}
          repository: voxeet/voxeet-io-web
